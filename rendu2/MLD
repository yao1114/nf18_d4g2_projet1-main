ArretLigne(#num_arret : int, arrive :bool, ligne => Ligne.num, nom_gare =>Gare.nom, ville_gare=>Gare.ville)  avec UNIQUE(num_arret, ligne, nom_gare, ville_gare)

Ligne(#num:int, type_train=>TypeTrain) 
 avec < Projection(Ligne, num)=Projection(ArretLigne, ligne)
        Une ligne doit être  relier à au moins deux arrêts).
        >

Voyage(#id_voyage:int, ligne => Ligne.num, train=>Train, calendrier=>Calendrier.ic_calendrier)
avec id_voyage -> une clé artifielle

ArretVoyage(#num_arret : int, #voyage =>Voyage.id_voyage, heure_depart : time, heure_arrive : time, arret_ligne => ArretLigne.num_arret,ligne=>ArretLigne.ligne)
avec < (Projection(ArretVoyage,ligne, Voyage)=Projection(Voyage,ligne,id_voyage)
       (Projection(ArretVoyage, voyage)=Projection(Voyage, id_voyage))
       Un voyage possède au moins 2 arrêts
       >









